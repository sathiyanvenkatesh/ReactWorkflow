[{"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\index.js":"1","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\App.js":"2","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\reportWebVitals.js":"3","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\app\\Store.js":"4","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\Route\\Routes.js":"5","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\redux-sclice\\SvcSclice.js":"6","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\redux-sclice\\UserSclice.js":"7","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\Login.js":"8","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcUpdate.js":"9","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcEnquiry.js":"10","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\NotFound.js":"11","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcNewRequest.js":"12","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcApprove.js":"13","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Layout.js":"14","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Footer.js":"15","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcsearchResultsDataTable.js":"16","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Banner.js":"17","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\AuthHistory.js":"18","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\Home.js":"19","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Navbar.js":"20","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Header.js":"21","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\redux-sclice\\popupwindow.js":"22","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\pages\\modalpage.js":"23"},{"size":731,"mtime":1633754066732,"results":"24","hashOfConfig":"25"},{"size":440,"mtime":1633748974214,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1633592174517,"results":"27","hashOfConfig":"25"},{"size":389,"mtime":1633759425328,"results":"28","hashOfConfig":"25"},{"size":1890,"mtime":1633759488593,"results":"29","hashOfConfig":"25"},{"size":7772,"mtime":1633592174516,"results":"30","hashOfConfig":"25"},{"size":1913,"mtime":1633592174517,"results":"31","hashOfConfig":"25"},{"size":2998,"mtime":1633599892408,"results":"32","hashOfConfig":"25"},{"size":9171,"mtime":1633773220822,"results":"33","hashOfConfig":"25"},{"size":5540,"mtime":1633764235882,"results":"34","hashOfConfig":"25"},{"size":297,"mtime":1633744115316,"results":"35","hashOfConfig":"25"},{"size":8977,"mtime":1633763278380,"results":"36","hashOfConfig":"25"},{"size":10627,"mtime":1633768561953,"results":"37","hashOfConfig":"25"},{"size":278,"mtime":1633624577721,"results":"38","hashOfConfig":"25"},{"size":553,"mtime":1633741185085,"results":"39","hashOfConfig":"25"},{"size":5955,"mtime":1633772965904,"results":"40","hashOfConfig":"25"},{"size":3028,"mtime":1633743831170,"results":"41","hashOfConfig":"25"},{"size":1462,"mtime":1633592174497,"results":"42","hashOfConfig":"25"},{"size":299,"mtime":1633623803274,"results":"43","hashOfConfig":"25"},{"size":876,"mtime":1633624637486,"results":"44","hashOfConfig":"25"},{"size":5649,"mtime":1633739473504,"results":"45","hashOfConfig":"25"},{"size":538,"mtime":1633767848164,"results":"46","hashOfConfig":"25"},{"size":2061,"mtime":1633769222793,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"cxjdl3",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\index.js",[],["99","100"],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\App.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\reportWebVitals.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\app\\Store.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\Route\\Routes.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\redux-sclice\\SvcSclice.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\redux-sclice\\UserSclice.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\Login.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcUpdate.js",["101"],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcEnquiry.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\NotFound.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcNewRequest.js",["102"],"import React, { useState } from 'react'\r\nimport { createNewSvcRequest, svcsSelector } from \"../../redux-sclice/SvcSclice\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//import { Redirect } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Container } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\n//import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TOOLS = ['Aldo', 'SVN', 'VSS', 'Git'];\r\nconst APPLICATIONSNAME = ['EFORMS', 'GOAML', 'AECB']\r\nconst DEVMANAGER = ['Manager1', 'Manager2']\r\n\r\n\r\nfunction SvcNewRequest() {\r\n\r\n  const toastId = React.useRef(null);\r\n\r\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null\r\n\r\n  const [values, setValues] = useState({\r\n    requestId: '', tool: '', requestorName: user.name, requestDate: '', applicationName: '', version: '', durationFrom: '', durationTo: '',\r\n    reasonforReq: '', checkOut: \"N\", checkIn: \"N\", unitManger: '', checkInReq: \"N\", deployment: \"N\", emergencyCheck: \"Y\", fromArchive: \"N\", getLatest: \"Y\",\r\n    toOtherEnv: \"N\", userId: user.name\r\n  });\r\n\r\n  const dispatch = useDispatch(); // add dispatch function to dipatch action to reducers and update the store \r\n  //const navigate1 = useNavigate()\r\n  // toast.configure();\r\n  const history = useHistory();\r\n  const { svcaddSucessflag, hasErrors, svcaddresult } = useSelector(svcsSelector)\r\n\r\n  console.log('svcaddSucessflag' + svcaddSucessflag);\r\n\r\n  const set = name => {\r\n    return ({ target: { value } }) => {\r\n      setValues(oldValues => ({ ...oldValues, [name]: value }));\r\n    }\r\n  };\r\n  const handlecheckinChange = (e) => {\r\n    let isChecked = e.target.checked ? \"Y\" : \"N\";\r\n    console.log(\"isChecked\" + isChecked);\r\n    values.checkIn = isChecked;\r\n  }\r\n  const handlecheckoutChange = (e) => {\r\n    let isChecked = e.target.checked ? \"Y\" : \"N\";\r\n    console.log(\"isChecked\" + isChecked);\r\n    values.checkOut = isChecked;\r\n  }\r\n\r\n  const handleValidation = (event, values) => {\r\n    event.preventDefault()\r\n    // alert(values.tools.length);\r\n    let valid = true;\r\n    if (values.tools.length < 0) {\r\n      valid = false;\r\n      alert('tools can not be empty , please select tools');\r\n    } else if (values.version.length < 0) {\r\n      valid = false;\r\n      alert('version can not be empty , please fill the version');\r\n    }\r\n    return valid;\r\n  }\r\n\r\n\r\n  const handleSubmit = event => {\r\n    //alert('clicked');\r\n    event.preventDefault();\r\n    console.log(\"Create New Requet clicked \");\r\n    if (handleValidation) {\r\n      dispatch(createNewSvcRequest(JSON.stringify(values)))\r\n    }\r\n\r\n  }\r\n  if (svcaddSucessflag && !hasErrors && svcaddresult !== '') {\r\n    console.log('svcaddresult response' + JSON.stringify(svcaddresult));\r\n    // <Redirect to='/updatesvc/1000'/>\r\n    /*  toast.success(\"SVC Request Created Successfully\"+JSON.stringify(svcaddresult),{\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        draggablePercent:80\r\n        \r\n       });*/\r\n    history.push('/updatesvc/' + JSON.stringify(svcaddresult));\r\n    // alert(\"SVC Added Successfully\");\r\n    //<ToastContainer/>\r\n    // navigate1.navigate('/updatesvc/'+row.requestid)\r\n  }\r\n  if (!svcaddSucessflag && hasErrors) {\r\n    if(! toast.isActive(toastId.current)) {\r\n      toastId.current = toast.error(\"Error in Saving Request !\", {\r\n      current:1,\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n    });\r\n  }\r\n\r\n  }\r\n  //render() {\r\n  return (\r\n    <div className=\"container margin-left-right\">\r\n      <h5 className=\"font-weight-bold\">SVC Access Request Form</h5>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"requestId\" className=\"col-sm-2 col-form-label text-danger \">Request ID</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control\" id=\"requestId\" disabled />\r\n          </div>\r\n          <label htmlFor=\"tool\" className=\"col-sm-2 col-form-label text-danger\">Tool</label>\r\n          <div className=\"col-sm-4\">\r\n            <select id=\"tool\" className=\"form-control\" value={values.tool} onChange={set('tool')} required>\r\n              <option >Select Tool</option>\r\n              {TOOLS.map(t => <option key={t}>{t}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"requestorName\" className=\"col-sm-2 col-form-label text-danger \">Requestor Name</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control big-checkbox\" id=\"requestorName\" placeholder=\"Requestor Name\" value={values.requestorName} onChange={set('requestorName')} required />\r\n          </div>\r\n          <label htmlFor=\"requestDate\" className=\"col-sm-2 col-form-label text-danger\">Request Date</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"date\" className=\"form-control-md big-checkbox\" id=\"requestDate\" value={values.requestDate} onChange={set('requestDate')} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"applicationname\" className=\"col-sm-2 col-form-label text-danger \">Application Name</label>\r\n          <div className=\"col-sm-4\">\r\n            <select id=\"applicationName\" className=\"form-control\" value={values.applicationName} onChange={set('applicationName')}>\r\n              <option >  Select Application   </option>\r\n              {APPLICATIONSNAME.map(a => <option key={a}>{a}</option>)}\r\n            </select>\r\n          </div>\r\n          <label htmlFor=\"version\" className=\"col-sm-2 col-form-label text-danger\">Version</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control\" id=\"version\" placeholder=\"Version\" value={values.version} onChange={set('version')} required />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"durationFrom\" className=\"col-sm-2 col-form-label text-danger \">Duration From</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"date\" className=\"form-control\" id=\"durationFrom\" value={values.durationFrom} onChange={set('durationFrom')} />\r\n          </div>\r\n          <label htmlFor=\"durationTo\" className=\"col-sm-2 col-form-label text-danger\">Duration To</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"date\" className=\"form-control\" id=\"durationTo\" value={values.durationTo} onChange={set('durationTo')} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"reasonforReq\" className=\"text-danger\">Description/Reason</label>\r\n            <textarea className=\"form-control\" id=\"reasonforReq\" placeholder=\"Description/Reason\" required value={values.reasonforReq} onChange={set('reasonforReq')}></textarea>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"col-md-12 p-0\">\r\n          <h5 className=\"font-weight-bold\">Access Rights</h5>\r\n          <div className=\"col-md-4 form-inline p-0\">\r\n            <div >\r\n              <div class=\"form-check p-0\">\r\n                <label class=\"form-check-label text-danger\" for=\"checkOut\">Check Out</label>\r\n                <input type=\"checkbox\" className=\"form-check-input ml-2 p-2\" id=\"checkOut\" required value={values.checkOut} onChange={e => handlecheckoutChange(e)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <div class=\"form-check p-0\">\r\n                <label class=\"form-check-label text-danger\" for=\"checkIn\">Check In</label>\r\n                <input type=\"checkbox\" className=\"form-check-input ml-2 p-2\" id=\"checkIn\" required value={values.checkIn} onChange={e => handlecheckinChange(e)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 p-0 mt-2\">\r\n          <h5 className=\"font-weight-bold\">Approvals</h5>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"unitManger\" className=\"col-sm-4 col-form-label text-danger\">Development Manager</label>\r\n            <div className=\"form-check col-sm-4\">\r\n              <select id=\"unitManger\" className=\"form-control\" value={values.unitManger} onChange={set('unitManger')} >\r\n                <option >Select Dev Manager </option>\r\n                {DEVMANAGER.map(m => <option key={m}>{m}</option>)}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group \">\r\n          <button type=\"button\" className=\"btn btn-md btn-danger\"  >Reset</button> &nbsp;&nbsp;\r\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" >Submit</button>\r\n        </div>\r\n        <br/>\r\n      </form>\r\n    </div>\r\n  )\r\n  /// }\r\n}\r\n\r\nexport default SvcNewRequest","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcApprove.js",["103","104"],"import React, { useState, useEffect } from 'react'\r\nimport { getSVCbyId, svcsSelector } from \"../../redux-sclice/SvcSclice\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOpen,setAlertBox } from '../../redux-sclice/popupwindow'\r\n\r\n\r\nfunction SvcApprove() {\r\n\r\n\r\n  //const user=localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null\r\n  const { id } = useParams();\r\n  console.log(\"id\" + id);\r\n  const dispatch = useDispatch(); // add dispatch function to dipatch action to reducers and update the store \r\n  const { svcDetails/*,hasErrors*/ } = useSelector(svcsSelector)\r\n  useEffect(() => {\r\n    //dispatch(getSVCbyId(id) )\r\n    fetchSVCDetailsById()\r\n\r\n  }, []);\r\n\r\n  const fetchSVCDetailsById = () => {\r\n    dispatch(getSVCbyId(id))\r\n  }\r\n\r\n  console.log(\"svcDetails in update page \" + JSON.stringify(svcDetails));\r\n  console.log(svcDetails.tool);\r\n  /* const [values, setValues] = useState({  \r\n     requestId:svcDetails.requestId,tool:svcDetails.tool,requestorName:user.name,requestDate:svcDetails.requestDate,applicationName:svcDetails.applicationName,version:svcDetails.version,durationFrom:svcDetails.durationFrom,\r\n     durationTo:svcDetails.durationTo,\r\n     reasonforReq:svcDetails.requstorRemarks,checkOut:svcDetails.checkOut,checkIn:svcDetails.checkIn,unitManger:svcDetails.unitManger,checkInReq:\"N\",deployment:\"N\",emergencyCheck:\"Y\",fromArchive:\"N\",getLatest:\"Y\",\r\n     toOtherEnv:\"N\",userId:user.name\r\n   });\r\n  \r\n   \r\n  console.log(\"values\"+JSON.stringify(values));*/\r\n\r\n\r\n  const contaierstyle = {\r\n    maxWidth: \"1500px\"\r\n  }\r\n  const spanstylegreen = {\r\n    color: \"green\",\r\n    fontWeight: \"bold\"\r\n  }\r\n  const spanstylered = {\r\n    color: \"red\",\r\n    fontWeight: \"bold\"\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    const payload = {type:\"success\",headerText:\"Message\",bodyText:\"Validation check\",saveButton:false};\r\n    dispatch(setAlertBox(payload))\r\n    dispatch(getOpen());\r\n    event.preventDefault();\r\n    //if(handleValidation){\r\n    // dispatch(createNewSvcRequest(JSON.stringify(values)) )\r\n    // }\r\n  }\r\n\r\n\r\n  //render() {\r\n  return (\r\n    <div className=\"container margin-left-right  pb-2\" style={contaierstyle}>\r\n      <h5 className=\"font-weight-bold\">SVC Access Request Update Form</h5>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group row p-0 mb-3\">\r\n            <label htmlFor=\"requestid\" className=\"col-sm-2 col-form-label text-danger \"><h6>Request ID</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"requestid\" value={svcDetails.requestId} disabled />\r\n            </div>\r\n            <label htmlFor=\"tools\" className=\"col-sm-2 col-form-label text-danger\"><h6>Tool</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"requestid\" value={svcDetails.tool} disabled />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row p-0 mb-3\">\r\n            <label htmlFor=\"requestorname\" className=\"col-sm-2 col-form-label text-danger \"><h6>Requestor Name</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"requestorname\" value={svcDetails.requestorName} disabled />\r\n            </div>\r\n            <label htmlFor=\"requestdate\" className=\"col-sm-2 col-form-label text-danger\"><h6>Request Date</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"requestdate\" value={svcDetails.requestDate} disabled />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row p-0 mb-3\">\r\n            <label htmlFor=\"applicationname\" className=\"col-sm-2 col-form-label text-danger \"><h6>Application Name</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"applicationname\" value={svcDetails.applicationName} disabled />\r\n            </div>\r\n            <label htmlFor=\"version\" className=\"col-sm-2 col-form-label text-danger\"><h6>Version</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"version\" value={svcDetails.version} disabled />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row p-0 mb-3\">\r\n            <label htmlFor=\"durationfrom\" className=\"col-sm-2 col-form-label text-danger \"><h6>Duration From</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"durationfrom\" value={svcDetails.durationFrom} disabled />\r\n            </div>\r\n            <label htmlFor=\"durationto\" className=\"col-sm-2 col-form-label text-danger\"><h6>Duration To</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <input type=\"text\" className=\"form-control\" id=\"durationto\" value={svcDetails.durationTo} disabled />\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-12\">\r\n              <label htmlFor=\"description\" className=\"text-danger\"><h6>Description/Reason</h6></label>\r\n              <textarea className=\"form-control\" id=\"description\" value={svcDetails.reasonforReq} disabled ></textarea>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-md-12 p-0 mb-2\">\r\n            <h5 className=\"font-weight-bold\">Access Rights</h5>\r\n            <div className=\"col-md-4 form-inline p-0\">\r\n              <div >\r\n                <div class=\"form-check p-0\">\r\n                  <label class=\"form-check-label text-danger\" for=\"checkOut\">Check Out</label>\r\n                  <input className=\"form-check-input ml-2 p-2\" type=\"checkbox\" defaultChecked={svcDetails.checkIn?'Y':'N'} value={svcDetails.checkOut} id=\"checkOut\" disabled />  \r\n                </div>\r\n              </div>\r\n              <div className=\"ml-4\">\r\n                <div class=\"form-check p-0\">\r\n                  <label class=\"form-check-label text-danger\" for=\"checkIn\">Check In</label>\r\n                  <input className=\"form-check-input ml-2 p-2\" type=\"checkbox\" defaultChecked={svcDetails.checkIn?'Y':'N'}  value={svcDetails.checkIn} id=\"checkIn\" disabled />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-12 p-0 mt-2\">\r\n             <h5 className=\"font-weight-bold\">Approvals</h5>\r\n             <div className=\"form-group row p-0 mb-3\">\r\n              <label htmlFor=\"devmgr\" className=\"col-sm-2 col-form-label text-danger\">Development Manager</label>\r\n              <div className=\"form-check col-sm-4\">\r\n                <input type=\"text\" className=\"form-control\" id=\"devmgr\" value={svcDetails.unitManger} disabled />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row p-0 mb-3\">\r\n              <label htmlFor=\"devmgr\" className=\"col-sm-2 col-form-label text-danger\">Approved</label>\r\n              <div className=\"form-check col-sm-4\">\r\n              <input className=\"form-radio-input mr-1\" type=\"radio\" value=\"Y\" checked={svcDetails.unitManagerApprival === 'ok'} id=\"approved\" name=\"appstatus\" />   <span>Yes</span>\r\n                    <input className=\"form-radio-input ml-2 mr-1\" type=\"radio\" value=\"N\" checked={svcDetails.unitManagerApprival !== 'ok'} id=\"rejected\" name=\"appstatus\" /> <span>No</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row p-0 mb-3\">\r\n              <label htmlFor=\"devmgr\" className=\"col-sm-2 col-form-label text-danger\">Risk Assurance Review</label>\r\n              <div className=\"form-check col-sm-4\">\r\n                <input type=\"text\" className=\"form-control\" id=\"rarmgr\" value={svcDetails.rarId} disabled />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row p-0 mb-3\">\r\n              <label htmlFor=\"devmgr\" className=\"col-sm-2 col-form-label text-danger\">Reviewed</label>\r\n              <div className=\"form-check col-sm-4 d-flex align-items-center\">\r\n              <input className=\"form-radio-input mr-1\" type=\"radio\" value=\"Y\" checked={svcDetails.rarApproval === 'ok'} id=\"approved\" name=\"rarstatus\" />  <span>Yes</span>\r\n              <input className=\"form-radio-input ml-2 mr-1\" type=\"radio\" value=\"N\" checked={svcDetails.rarApproval !== 'ok'} id=\"rejected\" name=\"rarstatus\" /> <span>No</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row p-0 mb-3\">\r\n              <label htmlFor=\"devmgr\" className=\"col-sm-2 col-form-label text-danger\">Access Provider</label>\r\n              <div className=\"form-check col-sm-4\">\r\n                <input type=\"text\" className=\"form-control\" id=\"rarmgr\" value={svcDetails.accessProvider} disabled />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group row p-0 mb-3\">\r\n              <label htmlFor=\"devmgr\" className=\"col-sm-2 col-form-label text-danger\">Approved</label>\r\n              <div className=\"form-check col-sm-4 d-flex align-items-center\">\r\n              <input className=\"form-radio-input mr-1\" type=\"radio\" value=\"Y\" checked={svcDetails.accessProviderApproval === 'ok'} id=\"approved\" name=\"accstatus\" /> <span>Yes</span>\r\n              <input className=\"form-radio-input ml-2 mr-1\" type=\"radio\" value=\"N\" checked={svcDetails.accessProviderApproval !== 'ok'} id=\"rejected\" name=\"accstatus\" /><span>No</span>\r\n\r\n              </div>\r\n            </div>\r\n         \r\n        \r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-12 \">\r\n              <label htmlFor=\"remarks\" className=\"text-danger\"><h6>All Remarks</h6></label>\r\n              <textarea className=\"form-control\" id=\"remaks\" value={svcDetails.allRemarks}  ></textarea>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"form-group row p-0 mb-3\">\r\n            <label htmlFor=\"requestStatus\" className=\"col-sm-2 col-form-label text-danger \"><h6>Request Status</h6></label>\r\n            <div className=\"col-sm-4\">\r\n              <span style={svcDetails.requestStatus === 'REJ' ? spanstylered : spanstylegreen}>{svcDetails.requestStatus}</span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group mb-4\">\r\n          <button type=\"button\" className=\"btn btn-md btn-danger\"  >Reset</button> &nbsp;&nbsp;\r\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" >Submit</button>\r\n        </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n//}\r\n\r\nexport default SvcApprove","C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Layout.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Footer.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\svc\\SvcsearchResultsDataTable.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Banner.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\AuthHistory.js",[],["105","106"],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\auth\\Home.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\layout\\Header.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\redux-sclice\\popupwindow.js",[],"C:\\Users\\ksira\\sathiyan\\ReactWorkflow\\src\\components\\pages\\modalpage.js",["107","108","109","110","111","112","113"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch } from 'react-redux'\r\nimport { getClose } from '../../redux-sclice/popupwindow'\r\nModal.setAppElement('#root');\r\n\r\nconst ModalPage = () => {\r\n    const { open } = useSelector((state) => state.popup);\r\n    const { message } = useSelector((state) => state.popup);\r\n    const dispatch = useDispatch();\r\n    const [headerText, setheaderText] = useState(\"\");\r\n    const [bodyText, setbodyText] = useState(\"\");\r\n    const [savebutton, setsaveButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(message)\r\n    }, [open])\r\n \r\n    function closeModal() {\r\n        dispatch(getClose())\r\n    }\r\n    return (\r\n        <>\r\n            {open && <div className=\"react-model-window\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className={`modal-title ${(message.type === \"error\")?\"text-danger\":\"text-success\"}`} >{message.headerText}</h5>\r\n                            <button type=\"button\" className=\"close\" onClick={() => closeModal()} aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>{message.bodyText}</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            {message.saveButton && <button type=\"button\" className=\"btn btn-primary\" onClick={() => { dispatch(getClose()) }}>Save changes</button>}\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { dispatch(getClose()) }}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalPage;",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":37,"column":6,"nodeType":"120","endLine":37,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":19},{"ruleId":"122","severity":1,"message":"126","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":20,"column":6,"nodeType":"120","endLine":20,"endColumn":8,"suggestions":"127"},{"ruleId":"114","replacedBy":"128"},{"ruleId":"116","replacedBy":"129"},{"ruleId":"122","severity":1,"message":"130","line":12,"column":12,"nodeType":"124","messageId":"125","endLine":12,"endColumn":22},{"ruleId":"122","severity":1,"message":"131","line":12,"column":24,"nodeType":"124","messageId":"125","endLine":12,"endColumn":37},{"ruleId":"122","severity":1,"message":"132","line":13,"column":12,"nodeType":"124","messageId":"125","endLine":13,"endColumn":20},{"ruleId":"122","severity":1,"message":"133","line":13,"column":22,"nodeType":"124","messageId":"125","endLine":13,"endColumn":33},{"ruleId":"122","severity":1,"message":"134","line":14,"column":12,"nodeType":"124","messageId":"125","endLine":14,"endColumn":22},{"ruleId":"122","severity":1,"message":"135","line":14,"column":24,"nodeType":"124","messageId":"125","endLine":14,"endColumn":37},{"ruleId":"118","severity":1,"message":"136","line":18,"column":8,"nodeType":"120","endLine":18,"endColumn":14,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSVCDetailsById'. Either include it or remove the dependency array.","ArrayExpression",["140"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["141"],["138"],["139"],"'headerText' is assigned a value but never used.","'setheaderText' is assigned a value but never used.","'bodyText' is assigned a value but never used.","'setbodyText' is assigned a value but never used.","'savebutton' is assigned a value but never used.","'setsaveButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [fetchSVCDetailsById]",{"range":"148","text":"149"},{"range":"150","text":"149"},"Update the dependencies array to be: [message, open]",{"range":"151","text":"152"},[1253,1255],"[fetchSVCDetailsById]",[751,753],[677,683],"[message, open]"]