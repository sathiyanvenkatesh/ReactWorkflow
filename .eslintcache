[{"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\index.js":"1","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\reportWebVitals.js":"2","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\app\\Store.js":"3","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\App.js":"4","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\popupwindow.js":"5","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\UserSclice.js":"6","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\SvcSearchSlice.js":"7","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\SvcSclice.js":"8","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\ParamsSlice.js":"9","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\Route\\Routes.js":"10","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\NotFound.js":"11","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\Login.js":"12","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\pages\\modalpage.js":"13","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Layout.js":"14","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcEnquiry.js":"15","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcUpdate.js":"16","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcApprove.js":"17","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcNewRequest.js":"18","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Footer.js":"19","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Navbar.js":"20","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcsearchResultsDataTable.js":"21","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Header.js":"22","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Banner.js":"23"},{"size":731,"mtime":1633745817096,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":577,"mtime":1634665382024,"results":"27","hashOfConfig":"25"},{"size":572,"mtime":1635182958784,"results":"28","hashOfConfig":"25"},{"size":538,"mtime":1633771201178,"results":"29","hashOfConfig":"25"},{"size":1913,"mtime":1633935176796,"results":"30","hashOfConfig":"25"},{"size":2463,"mtime":1634665549366,"results":"31","hashOfConfig":"25"},{"size":8493,"mtime":1633797735586,"results":"32","hashOfConfig":"25"},{"size":2905,"mtime":1634576979711,"results":"33","hashOfConfig":"25"},{"size":1890,"mtime":1633771200978,"results":"34","hashOfConfig":"25"},{"size":297,"mtime":1633745816921,"results":"35","hashOfConfig":"25"},{"size":2998,"mtime":1633745816895,"results":"36","hashOfConfig":"25"},{"size":2079,"mtime":1634670878411,"results":"37","hashOfConfig":"25"},{"size":307,"mtime":1635182958823,"results":"38","hashOfConfig":"25"},{"size":5536,"mtime":1635182958867,"results":"39","hashOfConfig":"25"},{"size":8905,"mtime":1635271428961,"results":"40","hashOfConfig":"25"},{"size":15065,"mtime":1635273867062,"results":"41","hashOfConfig":"25"},{"size":10510,"mtime":1635182958873,"results":"42","hashOfConfig":"25"},{"size":605,"mtime":1635182958802,"results":"43","hashOfConfig":"25"},{"size":878,"mtime":1635182958840,"results":"44","hashOfConfig":"25"},{"size":5684,"mtime":1635182958907,"results":"45","hashOfConfig":"25"},{"size":5553,"mtime":1635182958807,"results":"46","hashOfConfig":"25"},{"size":3293,"mtime":1635182958790,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1bkls9y",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\index.js",[],["99","100"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\reportWebVitals.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\app\\Store.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\App.js",["101"],"// import React, { Component } from 'react';\r\n// import './App.css';\r\n// import Routes from './components/Route/Routes';\r\n\r\n\r\n// class App extends Component {\r\n//   render(){\r\n//   return (\r\n//      <Routes />\r\n\r\n//   );\r\n// }\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React from 'react';\r\nimport Routes from './components/Route/Routes';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Routes />\r\n  )\r\n}\r\n\r\nexport default App;","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\popupwindow.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\UserSclice.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\SvcSearchSlice.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\SvcSclice.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\ParamsSlice.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\Route\\Routes.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\NotFound.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\Login.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\pages\\modalpage.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Layout.js",["102"],"import React, { Component } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <br></br>\r\n        {/* <Footer /> */}\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Layout;\r\n","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcEnquiry.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcUpdate.js",["103","104","105"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcApprove.js",["106","107","108","109","110"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcNewRequest.js",["111","112"],"import React, { useEffect, useState } from 'react'\r\nimport { createNewSvcRequest, svcsSelector } from \"../../redux-sclice/SvcSclice\";\r\nimport { paramSelector,fetchDevManagers,fetchTools,fetchApplicationsNames} from \"../../redux-sclice/ParamsSlice\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getOpen,setAlertBox } from '../../redux-sclice/popupwindow';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport addDays from 'date-fns/addDays';\r\n\r\n\r\nconst TOOLS = ['Aldo', 'SVN', 'VSS', 'Git'];\r\nconst APPLICATIONSNAME = ['EFORMS', 'GOAML', 'AECB','RRC','CBWS']\r\n//const DEVMANAGER = ['Manager1', 'Manager2']\r\nconst DEVMANAGER = [{\"userid\":'mbshetty',\"username\":\"Mallika Shetty\"},{ \"userid\":\"apillai\",\"username\":\"Ajit Pillai\"},{\"userid\":\"vsathiya\",\"username\":\"Sathiyan Venkatesh\"}]\r\n\r\n\r\nfunction SvcNewRequest() {\r\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(addDays(new Date(),30));\r\n  const [reqDate,setReqDate]=useState(new Date())\r\n  const [values, setValues] = useState({\r\n    requestId: '', tool: '', requestorName: user.name, requestDate:reqDate, applicationName: '', version: '', durationFrom:startDate , durationTo:endDate ,\r\n    reasonforReq: '', checkOut: \"N\", checkIn: \"N\", unitManger: '', checkInReq: \"N\", deployment: \"N\", emergencyCheck: \"Y\", fromArchive: \"N\", getLatest: \"Y\",\r\n    toOtherEnv: \"N\", userId: user.name\r\n  });\r\n\r\n  const dispatch = useDispatch(); // add dispatch function to dipatch action to reducers and update the store   \r\n  const history = useHistory();\r\n  const { svcaddSucessflag, hasErrors, svcaddresult } = useSelector(svcsSelector);\r\n  const {devmanagers} = useSelector(paramSelector);\r\n  useEffect(() => {\r\n    fetchSVCPaamDetails()\r\n    console.log('hi');\r\n  },[]);\r\n\r\nconst fetchSVCPaamDetails = () => {\r\n  console.log('inside param methos' );\r\n  dispatch(fetchDevManagers());\r\n  dispatch(fetchTools());\r\n  dispatch(fetchApplicationsNames());\r\n  console.log(\"hi\"+devmanagers);\r\n \r\n}\r\n   \r\n  \r\n  const set = name => {\r\n    return ({ target: { value } }) => {\r\n      setValues(oldValues => ({ ...oldValues, [name]: value }));\r\n    }\r\n  };\r\n  const handlecheckinChange = (e) => {\r\n    let isChecked = e.target.checked ? \"Y\" : \"N\";\r\n    console.log(\"isChecked\" + isChecked);\r\n    values.checkIn = isChecked;\r\n  }\r\n  const handlecheckoutChange = (e) => {\r\n    let isChecked = e.target.checked ? \"Y\" : \"N\";\r\n    console.log(\"isChecked\" + isChecked);\r\n    values.checkOut = isChecked;\r\n  }\r\n\r\n  const handleValidation = (event, values) => {\r\n    event.preventDefault()\r\n    // alert(values.tools.length);\r\n    let valid = true;\r\n    if (values.tools.length < 0) {\r\n      valid = false;\r\n      alert('tools can not be empty , please select tools');\r\n    } else if (values.version.length < 0) {\r\n      valid = false;\r\n      alert('version can not be empty , please fill the version');\r\n    }\r\n    return valid;\r\n  }\r\n\r\n\r\n  const handleSubmit = event => {\r\n    //alert('clicked');\r\n    event.preventDefault();\r\n    console.log(\"Create New Requet clicked \");\r\n    if (handleValidation) {\r\n      dispatch(createNewSvcRequest(JSON.stringify(values)))\r\n    }\r\n\r\n  }\r\n  if (svcaddSucessflag && !hasErrors && svcaddresult !== '') {\r\n    console.log('svcaddresult response' + JSON.stringify(svcaddresult));\r\n    // <Redirect to='/updatesvc/1000'/>\r\n    /*  toast.success(\"SVC Request Created Successfully\"+JSON.stringify(svcaddresult),{\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        draggablePercent:80\r\n        \r\n       });*/\r\n       const payload = {type:\"success\",headerText:\"Info\",bodyText:\"SVC Request Created Successfully\" + JSON.stringify(svcaddresult),saveButton:false};\r\n       dispatch(setAlertBox(payload))\r\n       dispatch(getOpen());\r\n\r\n    history.push('/updatesvc/' + JSON.stringify(svcaddresult));\r\n    // alert(\"SVC Added Successfully\");\r\n    //<ToastContainer/>\r\n    // navigate1.navigate('/updatesvc/'+row.requestid)\r\n  }\r\n  if (!svcaddSucessflag && hasErrors) {\r\n   \r\n    const payload = {type:\"Error\",headerText:\"Info\",bodyText:\"Error in creating SVC Request \",saveButton:false};\r\n    dispatch(setAlertBox(payload))\r\n    dispatch(getOpen());\r\n  }\r\n  //render() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h5 className=\"font-weight-bold\">SVC Access Request Form</h5>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"requestId\" className=\"col-sm-2 col-form-label text-danger \">Request ID</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control\" id=\"requestId\" disabled />\r\n          </div>\r\n          <label htmlFor=\"tool\" className=\"col-sm-2 col-form-label text-danger\">Tool</label>\r\n          <div className=\"col-sm-4\">\r\n            <select id=\"tool\" className=\"form-control\" value={values.tool} onChange={set('tool')} required>\r\n              <option >Select Tool</option>\r\n              {TOOLS.map(t => <option key={t}>{t}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"requestorName\" className=\"col-sm-2 col-form-label text-danger \">Requestor Name</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control big-checkbox\" id=\"requestorName\" placeholder=\"Requestor Name\" value={values.requestorName} onChange={set('requestorName')} required />\r\n          </div>\r\n          <label htmlFor=\"requestDate\" className=\"col-sm-2 col-form-label text-danger\">Request Date</label>\r\n          <div className=\"col-sm-4\">\r\n           { /*<input type=\"date\" className=\"form-control-md big-checkbox\" id=\"requestDate\" value={values.requestDate} onChange={set('requestDate')} />*/}\r\n            <DatePicker className=\"form-control\" selected={reqDate} dateFormat=\"dd/MM/yyyy\"  value={values.requestDate} minDate={new Date()} maxDate={new Date()}  disabled />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"applicationname\" className=\"col-sm-2 col-form-label text-danger \">Application Name</label>\r\n          <div className=\"col-sm-4\">\r\n            <select id=\"applicationName\" className=\"form-control\" value={values.applicationName} onChange={set('applicationName')}>\r\n              <option >  Select Application   </option>\r\n              {APPLICATIONSNAME.map(a => <option key={a}>{a}</option>)}\r\n            </select>\r\n          </div>\r\n          <label htmlFor=\"version\" className=\"col-sm-2 col-form-label text-danger\">Version</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control\" id=\"version\" placeholder=\"Version\" value={values.version} onChange={set('version')} required />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"durationFrom\" className=\"col-sm-2 col-form-label text-danger \">Duration From</label>\r\n          <div className=\"col-sm-4\">\r\n            {/*<input type=\"date\" className=\"form-control\" id=\"durationFrom\" value={values.durationFrom} onChange={set('durationFrom')} />*/}\r\n            <DatePicker className=\"form-control\" selected={startDate} dateFormat=\"dd/MM/yyyy\"  value={values.durationFrom} minDate={new Date()} maxDate={new Date()}  onChange={(date) =>setStartDate(date)} />\r\n          </div>\r\n          <label htmlFor=\"durationTo\" className=\"col-sm-2 col-form-label text-danger\">Duration To</label>\r\n          <div className=\"col-sm-4\">\r\n            {/*<input type=\"date\" className=\"form-control\" id=\"durationTo\" value={values.durationTo} onChange={set('durationTo')} />*/}\r\n            <DatePicker className=\"form-control\" selected={endDate} dateFormat=\"dd/MM/yyyy\"  value={values.durationTo} minDate={new Date()} maxDate={addDays(new Date(),30)} onChange={(date) =>setEndDate(date)} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"reasonforReq\" className=\"text-danger\">Description/Reason</label>\r\n            <textarea className=\"form-control\" id=\"reasonforReq\" placeholder=\"Description/Reason\" required value={values.reasonforReq} onChange={set('reasonforReq')}></textarea>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"col-md-12 p-0\">\r\n          <h5 className=\"font-weight-bold\">Access Rights</h5>\r\n          <div className=\"col-md-4 form-inline p-0\">\r\n            <div >\r\n              <div className=\"form-check p-0\">\r\n                <label className=\"form-check-label text-danger\" htmlFor=\"checkOut\">Check Out</label>\r\n                <input type=\"checkbox\" className=\"form-check-input ml-2 p-2\" id=\"checkOut\" required value={values.checkOut} onChange={e => handlecheckoutChange(e)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <div className=\"form-check p-0\">\r\n                <label className=\"form-check-label text-danger\" htmlFor=\"checkIn\">Check In</label>\r\n                <input type=\"checkbox\" className=\"form-check-input ml-2 p-2\" id=\"checkIn\" required value={values.checkIn} onChange={e => handlecheckinChange(e)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 p-0 mt-2\">\r\n          <h5 className=\"font-weight-bold\">Approvals</h5>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"unitManger\" className=\"col-sm-4 col-form-label text-danger\">Development Manager</label>\r\n            <div className=\"form-check col-sm-4\">\r\n              <select id=\"unitManger\" className=\"form-control\" value={values.unitManger} onChange={set('unitManger')} >\r\n                <option >Select Dev Manager </option>\r\n                {DEVMANAGER.map(m => <option key={m.userid} value={m.userid}>{m.username}</option>)}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group \">\r\n          <button type=\"button\" className=\"btn btn-md btn-danger\"  >Reset</button> &nbsp;&nbsp;\r\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" >Submit</button>\r\n        </div>\r\n        <br/>\r\n      </form>\r\n    </div>\r\n  )\r\n  /// }\r\n}\r\n\r\nexport default SvcNewRequest","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Footer.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Navbar.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcsearchResultsDataTable.js",["113","114","115","116","117"],"import React,{useState,useEffect}  from 'react'\r\nimport DataTable  from \"react-data-table-component\";\r\nimport {svcsSelector,approveOrRejectSVCRequest,/*fetchSvcs,*/approveORrejectFailure,approveORrejectSucess} from \"../../redux-sclice/SvcSclice\";\r\nimport { svcSearchSelector,fetchSvcs } from \"../../redux-sclice/SvcSearchSlice\";\r\nimport axios from 'axios';\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useDispatch,useSelector} from 'react-redux';\r\nimport { getOpen,setAlertBox } from '../../redux-sclice/popupwindow';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\nconst ActionComponent = ({  row, onClick  }) => {\r\n  const clickHandler = () => onClick(row);\r\n  return row.requestStatus==='SUB'?<Button type=\"button\" className=\"btn-sm btn-success\" onClick={clickHandler}>Approve</Button>:\"\";\r\n};\r\n\r\n\r\nconst ActionLinkComponent =({row,onClick}) => {\r\nconst clickLinkHandler = () => onClick(row);\r\n // console.log(row);\r\n  return <a  href={'/approvesvc/'+row.requestid }  onClick={clickLinkHandler}>{row.requestid}</a>\r\n};\r\n\r\nconst  handleLinkAction =(row)=>{\r\n  console.log(row);\r\n}\r\nconst customStyles = {\r\n  heading:{\r\n    style: { \r\n      minHeight:\"35px\",\r\n      fontSize:\"14px\"\r\n    }\r\n  },\r\n  title:{\r\n    style:{\r\n      fontSize:\"14px\"\r\n    }\r\n  },\r\n  text: {\r\n    primary: '#268bd2',\r\n    secondary: '#2aa198',\r\n  },\r\n  rows: {\r\n    style: {\r\n        minHeight: '35px', // override the row height\r\n    },\r\n},\r\n  headRow: {\r\n    style: {\r\n      backgroundColor: '#343a40',// override the row height\r\n      minHeight:\"35px\",\r\n      height:\"10px\"\r\n    }\r\n  } ,\r\n  headCells: {\r\n      style:{\r\n          color:'#f8f9fa',\r\n          fontSize:'16px'\r\n      }\r\n  }\r\n};\r\n\r\n\r\n function  SvcsearchResultsDataTable () {\r\n\r\n // let rowValue = '';\r\n  const [rowValue,setRowValue]=useState(null);\r\n  const [update,setUpdate] = useState(0);\r\n  //const {svclist,svcapproveDetails}=useSelector(svcsSelector)\r\n  const {svclist} = useSelector(svcSearchSelector)\r\n  const dispatch = useDispatch(); // add dispatch function to dipatch action to reducers and update the store\r\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null\r\n  const userid=\"apillai\";\r\n  const [values, setValues] = useState({\r\n    userid: user.name, reqid: '', reqStatus: '', fromdate: '', todate: '', raisedby: '', showall: false\r\n  });\r\n\r\n  const set = name => {\r\n    return ({ target: { value } }) => {\r\n      setValues(oldValues => ({ ...oldValues, [name]: value }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"update\")\r\n    // dispatch(approveOrRejectSVCRequest(rowValue,\"apillai\"));\r\n    if(update!==0&& rowValue!==null){\r\n    apicallForUserRequest().then( result => {\r\n      console.log(result)\r\n      const payload = {type:\"success\",headerText:\"Message\",bodyText:result.data,saveButton:false};\r\n      dispatch(setAlertBox(payload))\r\n      dispatch(getOpen());\r\n      dispatch(fetchSvcs(JSON.stringify(values)));     \r\n    },error => {\r\n      dispatch(approveORrejectFailure())\r\n    })\r\n  }\r\n\r\n  },[update]);\r\n\r\n  const apicallForUserRequest = () => {\r\n    const headers = {\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n      'Access-Control-Allow-Origin': \"*\"\r\n    }\r\n    const valuesoption = {\r\n      'approver_Unit_Dev_Mngr': 'Y',\r\n      'remarks': 'ok'\r\n    }\r\n\r\n    return axios.post('https://conv.rakbankonline.ae/eida/svc-local/api/v1/svc/approveorrejct/' +rowValue+ '/' +userid, valuesoption, {\r\n      headers: headers\r\n    })\r\n    } \r\n  \r\n\r\n  const handleButtonAction = (row) => {\r\n    console.log(row);\r\n    //rowValue = row;\r\n    setRowValue(row.requestid)\r\n    setUpdate(update+1)\r\n}\r\n\r\n\r\n     const columns =  [\r\n      {\r\n        cell: row =><ActionLinkComponent row={row} onClick={()=>handleLinkAction(row)}></ActionLinkComponent>,\r\n        name: \"Request Id\",\r\n        selector: \"requestid\",\r\n        sortable: true,\r\n        style: {\r\n          fontSize:'18px'\r\n        },\r\n        width:\"200px\"\r\n      },\r\n      {\r\n        name: \"Creator Id\",\r\n        selector: \"creatorid\",\r\n        sortable: true,\r\n        style: {\r\n          fontSize:'18px' \r\n        },\r\n        width:\"300px\"\r\n      },\r\n      {\r\n        name: \"Request Date\",\r\n        selector: \"requestDate\",\r\n        cell:row =>moment(row.requestDate).format(\"DD-MM-YYYY\"),\r\n        sortable: true,\r\n        right: true,\r\n        width:\"300px\"\r\n        \r\n      },\r\n      {\r\n        name: \"Request Status\", \r\n        selector: \"requestStatus\",\r\n        sortable: true,\r\n        right: true,\r\n        width:\"200px\"\r\n      },\r\n      {\r\n        name: \"Application Name\",\r\n        selector: \"applicationName\",\r\n        sortable: true,\r\n        right: true,\r\n        width:\"250px\"\r\n      },\r\n      {\r\n        name:\"Action\",\r\n       cell: row => <ActionComponent row={row} onClick={() => {handleButtonAction(row)}}>Approve</ActionComponent> ,\r\n        ignoreRowClick: true,\r\n        allowOverflow: true,\r\n        button: true,\r\n        width:\"200px\"\r\n      }\r\n    ];\r\n  \r\n    return (\r\n      <DataTable\r\n            title=\"SVC Result Table\"\r\n            columns={columns}\r\n            data={svclist}\r\n            pagination\r\n            fixedHeader\r\n            striped\r\n            fixedHeaderScrollHeight=\"500px\"\r\n            customStyles={customStyles}\r\n        />\r\n//     <DataTable\r\n//         columns={columns}\r\n//         data={svclist}\r\n//         defaultSortField=\"title\"\r\n//         pagination\r\n//         customStyles={customStyles}\r\n//         noContextMenu // comment this to show itemas selected as alert at the top of table\r\n//         fixedHeader\r\n//         fixedHeaderScrollHeight=\"500px\"\r\n//  /> \r\n    \r\n    )\r\n  //}\r\n}\r\n\r\nexport default SvcsearchResultsDataTable","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Header.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Banner.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":20,"column":10,"nodeType":"124","messageId":"125","endLine":20,"endColumn":25},{"ruleId":"122","severity":1,"message":"126","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"127","line":19,"column":23,"nodeType":"124","messageId":"125","endLine":19,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":38,"column":6,"nodeType":"130","endLine":38,"endColumn":8,"suggestions":"131"},{"ruleId":"122","severity":1,"message":"132","line":52,"column":9,"nodeType":"124","messageId":"125","endLine":52,"endColumn":22},{"ruleId":"122","severity":1,"message":"133","line":2,"column":36,"nodeType":"124","messageId":"125","endLine":2,"endColumn":57},{"ruleId":"128","severity":1,"message":"134","line":52,"column":6,"nodeType":"130","endLine":52,"endColumn":18,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"129","line":57,"column":6,"nodeType":"130","endLine":57,"endColumn":8,"suggestions":"136"},{"ruleId":"122","severity":1,"message":"132","line":76,"column":9,"nodeType":"124","messageId":"125","endLine":76,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":129,"column":122,"nodeType":"139","messageId":"140","endLine":129,"endColumn":123},{"ruleId":"122","severity":1,"message":"141","line":22,"column":18,"nodeType":"124","messageId":"125","endLine":22,"endColumn":28},{"ruleId":"128","severity":1,"message":"142","line":36,"column":5,"nodeType":"130","endLine":36,"endColumn":7,"suggestions":"143"},{"ruleId":"122","severity":1,"message":"144","line":3,"column":9,"nodeType":"124","messageId":"125","endLine":3,"endColumn":21},{"ruleId":"122","severity":1,"message":"145","line":3,"column":22,"nodeType":"124","messageId":"125","endLine":3,"endColumn":47},{"ruleId":"122","severity":1,"message":"133","line":3,"column":85,"nodeType":"124","messageId":"125","endLine":3,"endColumn":106},{"ruleId":"122","severity":1,"message":"146","line":81,"column":9,"nodeType":"124","messageId":"125","endLine":81,"endColumn":12},{"ruleId":"128","severity":1,"message":"147","line":102,"column":5,"nodeType":"130","endLine":102,"endColumn":13,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'hasErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSVCDetailsById'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'contaierstyle' is assigned a value but never used.","'approveORrejectSucess' is defined but never used.","React Hook useEffect has a missing dependency: 'localSvcDetails'. Either include it or remove the dependency array.",["152"],["153"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'setReqDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSVCPaamDetails'. Either include it or remove the dependency array.",["154"],"'svcsSelector' is defined but never used.","'approveOrRejectSVCRequest' is defined but never used.","'set' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apicallForUserRequest', 'dispatch', 'rowValue', and 'values'. Either include them or remove the dependency array.",["155"],"no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"156","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [fetchSVCDetailsById]",{"range":"165","text":"166"},"Update the dependencies array to be: [localSvcDetails, svcDetails]",{"range":"167","text":"168"},{"range":"169","text":"166"},"Update the dependencies array to be: [fetchSVCPaamDetails]",{"range":"170","text":"171"},"Update the dependencies array to be: [apicallForUserRequest, dispatch, rowValue, update, values]",{"range":"172","text":"173"},[1483,1485],"[fetchSVCDetailsById]",[2020,2032],"[localSvcDetails, svcDetails]",[2123,2125],[1971,1973],"[fetchSVCPaamDetails]",[3020,3028],"[apicallForUserRequest, dispatch, rowValue, update, values]"]