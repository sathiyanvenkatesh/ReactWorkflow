[{"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\index.js":"1","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\reportWebVitals.js":"2","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\App.js":"3","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\app\\Store.js":"4","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\SvcSclice.js":"5","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\Route\\Routes.js":"6","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\UserSclice.js":"7","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\Login.js":"8","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Layout.js":"9","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcNewRequest.js":"10","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\NotFound.js":"11","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcEnquiry.js":"12","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcUpdate.js":"13","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcApprove.js":"14","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Footer.js":"15","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Navbar.js":"16","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcsearchResultsDataTable.js":"17","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Banner.js":"18","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Header.js":"19","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\pages\\modalpage.js":"20","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\popupwindow.js":"21","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\ParamsSlice.js":"22"},{"size":731,"mtime":1633745817096,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":440,"mtime":1633745816871,"results":"26","hashOfConfig":"24"},{"size":474,"mtime":1633805920687,"results":"27","hashOfConfig":"24"},{"size":8493,"mtime":1633797735586,"results":"28","hashOfConfig":"24"},{"size":1890,"mtime":1633771200978,"results":"29","hashOfConfig":"24"},{"size":1913,"mtime":1616525196869,"results":"30","hashOfConfig":"24"},{"size":2998,"mtime":1633745816895,"results":"31","hashOfConfig":"24"},{"size":278,"mtime":1633745817021,"results":"32","hashOfConfig":"24"},{"size":9551,"mtime":1633806384674,"results":"33","hashOfConfig":"24"},{"size":297,"mtime":1633745816921,"results":"34","hashOfConfig":"24"},{"size":5540,"mtime":1633774521757,"results":"35","hashOfConfig":"24"},{"size":8681,"mtime":1633866752915,"results":"36","hashOfConfig":"24"},{"size":13240,"mtime":1633866501835,"results":"37","hashOfConfig":"24"},{"size":553,"mtime":1633745816974,"results":"38","hashOfConfig":"24"},{"size":876,"mtime":1633745817022,"results":"39","hashOfConfig":"24"},{"size":7957,"mtime":1633869103261,"results":"40","hashOfConfig":"24"},{"size":3028,"mtime":1633745816948,"results":"41","hashOfConfig":"24"},{"size":5649,"mtime":1633745816998,"results":"42","hashOfConfig":"24"},{"size":2061,"mtime":1633771201022,"results":"43","hashOfConfig":"24"},{"size":538,"mtime":1633771201178,"results":"44","hashOfConfig":"24"},{"size":2806,"mtime":1633806474747,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1bkls9y",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\index.js",[],["93","94"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\reportWebVitals.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\App.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\app\\Store.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\SvcSclice.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\Route\\Routes.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\UserSclice.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\Login.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Layout.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcNewRequest.js",["95"],"import React, { useEffect, useState } from 'react'\r\nimport { createNewSvcRequest, svcsSelector } from \"../../redux-sclice/SvcSclice\";\r\nimport { paramSelector,fetchDevManagers} from \"../../redux-sclice/ParamsSlice\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//import { Redirect } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getOpen,setAlertBox } from '../../redux-sclice/popupwindow'\r\n\r\n//import { Container } from 'react-bootstrap';\r\n//import { toast } from 'react-toastify';\r\n//import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst TOOLS = ['Aldo', 'SVN', 'VSS', 'Git'];\r\nconst APPLICATIONSNAME = ['EFORMS', 'GOAML', 'AECB']\r\nconst DEVMANAGER = ['Manager1', 'Manager2']\r\n\r\n\r\nfunction SvcNewRequest() {\r\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null\r\n  const [values, setValues] = useState({\r\n    requestId: '', tool: '', requestorName: user.name, requestDate: '', applicationName: '', version: '', durationFrom: '', durationTo: '',\r\n    reasonforReq: '', checkOut: \"N\", checkIn: \"N\", unitManger: '', checkInReq: \"N\", deployment: \"N\", emergencyCheck: \"Y\", fromArchive: \"N\", getLatest: \"Y\",\r\n    toOtherEnv: \"N\", userId: user.name\r\n  });\r\n\r\n  const dispatch = useDispatch(); // add dispatch function to dipatch action to reducers and update the store \r\n  //const navigate1 = useNavigate()\r\n  // toast.configure();\r\n  const history = useHistory();\r\n  const { svcaddSucessflag, hasErrors, svcaddresult } = useSelector(svcsSelector);\r\n  const {devmanagers} = useSelector(paramSelector)\r\n  useEffect(() => {\r\n    //dispatch(getSVCbyId(id) )\r\n    fetchSVCPaamDetails()\r\n    console.log('hi');\r\n\r\n  },[]);\r\n\r\nconst fetchSVCPaamDetails = () => {\r\n  console.log('inside param methos' );\r\n  dispatch(fetchDevManagers());\r\n // if(devmanagers!==undefined){\r\n  console.log(\"hi\"+devmanagers);\r\n // }\r\n}\r\n   \r\n  \r\n  const set = name => {\r\n    return ({ target: { value } }) => {\r\n      setValues(oldValues => ({ ...oldValues, [name]: value }));\r\n    }\r\n  };\r\n  const handlecheckinChange = (e) => {\r\n    let isChecked = e.target.checked ? \"Y\" : \"N\";\r\n    console.log(\"isChecked\" + isChecked);\r\n    values.checkIn = isChecked;\r\n  }\r\n  const handlecheckoutChange = (e) => {\r\n    let isChecked = e.target.checked ? \"Y\" : \"N\";\r\n    console.log(\"isChecked\" + isChecked);\r\n    values.checkOut = isChecked;\r\n  }\r\n\r\n  const handleValidation = (event, values) => {\r\n    event.preventDefault()\r\n    // alert(values.tools.length);\r\n    let valid = true;\r\n    if (values.tools.length < 0) {\r\n      valid = false;\r\n      alert('tools can not be empty , please select tools');\r\n    } else if (values.version.length < 0) {\r\n      valid = false;\r\n      alert('version can not be empty , please fill the version');\r\n    }\r\n    return valid;\r\n  }\r\n\r\n\r\n  const handleSubmit = event => {\r\n    //alert('clicked');\r\n    event.preventDefault();\r\n    console.log(\"Create New Requet clicked \");\r\n    if (handleValidation) {\r\n      dispatch(createNewSvcRequest(JSON.stringify(values)))\r\n    }\r\n\r\n  }\r\n  if (svcaddSucessflag && !hasErrors && svcaddresult !== '') {\r\n    console.log('svcaddresult response' + JSON.stringify(svcaddresult));\r\n    // <Redirect to='/updatesvc/1000'/>\r\n    /*  toast.success(\"SVC Request Created Successfully\"+JSON.stringify(svcaddresult),{\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        draggablePercent:80\r\n        \r\n       });*/\r\n       const payload = {type:\"success\",headerText:\"Info\",bodyText:\"SVC Request Created Successfully\" + JSON.stringify(svcaddresult),saveButton:false};\r\n       dispatch(setAlertBox(payload))\r\n       dispatch(getOpen());\r\n\r\n    history.push('/updatesvc/' + JSON.stringify(svcaddresult));\r\n    // alert(\"SVC Added Successfully\");\r\n    //<ToastContainer/>\r\n    // navigate1.navigate('/updatesvc/'+row.requestid)\r\n  }\r\n  if (!svcaddSucessflag && hasErrors) {\r\n   \r\n    const payload = {type:\"Error\",headerText:\"Info\",bodyText:\"Error in creating SVC Request \",saveButton:false};\r\n    dispatch(setAlertBox(payload))\r\n    dispatch(getOpen());\r\n  }\r\n  //render() {\r\n  return (\r\n    <div className=\"container margin-left-right\">\r\n      <h5 className=\"font-weight-bold\">SVC Access Request Form</h5>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"requestId\" className=\"col-sm-2 col-form-label text-danger \">Request ID</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control\" id=\"requestId\" disabled />\r\n          </div>\r\n          <label htmlFor=\"tool\" className=\"col-sm-2 col-form-label text-danger\">Tool</label>\r\n          <div className=\"col-sm-4\">\r\n            <select id=\"tool\" className=\"form-control\" value={values.tool} onChange={set('tool')} required>\r\n              <option >Select Tool</option>\r\n              {TOOLS.map(t => <option key={t}>{t}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"requestorName\" className=\"col-sm-2 col-form-label text-danger \">Requestor Name</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control big-checkbox\" id=\"requestorName\" placeholder=\"Requestor Name\" value={values.requestorName} onChange={set('requestorName')} required />\r\n          </div>\r\n          <label htmlFor=\"requestDate\" className=\"col-sm-2 col-form-label text-danger\">Request Date</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"date\" className=\"form-control-md big-checkbox\" id=\"requestDate\" value={values.requestDate} onChange={set('requestDate')} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"applicationname\" className=\"col-sm-2 col-form-label text-danger \">Application Name</label>\r\n          <div className=\"col-sm-4\">\r\n            <select id=\"applicationName\" className=\"form-control\" value={values.applicationName} onChange={set('applicationName')}>\r\n              <option >  Select Application   </option>\r\n              {APPLICATIONSNAME.map(a => <option key={a}>{a}</option>)}\r\n            </select>\r\n          </div>\r\n          <label htmlFor=\"version\" className=\"col-sm-2 col-form-label text-danger\">Version</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"text\" className=\"form-control\" id=\"version\" placeholder=\"Version\" value={values.version} onChange={set('version')} required />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"durationFrom\" className=\"col-sm-2 col-form-label text-danger \">Duration From</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"date\" className=\"form-control\" id=\"durationFrom\" value={values.durationFrom} onChange={set('durationFrom')} />\r\n          </div>\r\n          <label htmlFor=\"durationTo\" className=\"col-sm-2 col-form-label text-danger\">Duration To</label>\r\n          <div className=\"col-sm-4\">\r\n            <input type=\"date\" className=\"form-control\" id=\"durationTo\" value={values.durationTo} onChange={set('durationTo')} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-12\">\r\n            <label htmlFor=\"reasonforReq\" className=\"text-danger\">Description/Reason</label>\r\n            <textarea className=\"form-control\" id=\"reasonforReq\" placeholder=\"Description/Reason\" required value={values.reasonforReq} onChange={set('reasonforReq')}></textarea>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"col-md-12 p-0\">\r\n          <h5 className=\"font-weight-bold\">Access Rights</h5>\r\n          <div className=\"col-md-4 form-inline p-0\">\r\n            <div >\r\n              <div class=\"form-check p-0\">\r\n                <label class=\"form-check-label text-danger\" for=\"checkOut\">Check Out</label>\r\n                <input type=\"checkbox\" className=\"form-check-input ml-2 p-2\" id=\"checkOut\" required value={values.checkOut} onChange={e => handlecheckoutChange(e)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-4\">\r\n              <div class=\"form-check p-0\">\r\n                <label class=\"form-check-label text-danger\" for=\"checkIn\">Check In</label>\r\n                <input type=\"checkbox\" className=\"form-check-input ml-2 p-2\" id=\"checkIn\" required value={values.checkIn} onChange={e => handlecheckinChange(e)} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 p-0 mt-2\">\r\n          <h5 className=\"font-weight-bold\">Approvals</h5>\r\n          <div className=\"form-group row\">\r\n            <label htmlFor=\"unitManger\" className=\"col-sm-4 col-form-label text-danger\">Development Manager</label>\r\n            <div className=\"form-check col-sm-4\">\r\n              <select id=\"unitManger\" className=\"form-control\" value={values.unitManger} onChange={set('unitManger')} >\r\n                <option >Select Dev Manager </option>\r\n                {DEVMANAGER.map(m => <option key={m}>{m}</option>)}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group \">\r\n          <button type=\"button\" className=\"btn btn-md btn-danger\"  >Reset</button> &nbsp;&nbsp;\r\n          <button type=\"submit\" className=\"btn btn-primary btn-md\" >Submit</button>\r\n        </div>\r\n        <br/>\r\n      </form>\r\n    </div>\r\n  )\r\n  /// }\r\n}\r\n\r\nexport default SvcNewRequest","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\auth\\NotFound.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcEnquiry.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcUpdate.js",["96","97"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcApprove.js",["98","99","100"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Footer.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Navbar.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\svc\\SvcsearchResultsDataTable.js",["101","102","103","104","105"],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Banner.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\layout\\Header.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\components\\pages\\modalpage.js",["106","107","108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch } from 'react-redux'\r\nimport { getClose } from '../../redux-sclice/popupwindow'\r\nModal.setAppElement('#root');\r\n\r\nconst ModalPage = () => {\r\n    const { open } = useSelector((state) => state.popup);\r\n    const { message } = useSelector((state) => state.popup);\r\n    const dispatch = useDispatch();\r\n    const [headerText, setheaderText] = useState(\"\");\r\n    const [bodyText, setbodyText] = useState(\"\");\r\n    const [savebutton, setsaveButton] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log(message)\r\n    }, [open])\r\n \r\n    function closeModal() {\r\n        dispatch(getClose())\r\n    }\r\n    return (\r\n        <>\r\n            {open && <div className=\"react-model-window\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className={`modal-title ${(message.type === \"error\")?\"text-danger\":\"text-success\"}`} >{message.headerText}</h5>\r\n                            <button type=\"button\" className=\"close\" onClick={() => closeModal()} aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>{message.bodyText}</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            {message.saveButton && <button type=\"button\" className=\"btn btn-primary\" onClick={() => { dispatch(getClose()) }}>Save changes</button>}\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { dispatch(getClose()) }}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ModalPage;","D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\popupwindow.js",[],"D:\\Sathiyan\\AzurGitRepos\\ReactWorkflow\\src\\redux-sclice\\ParamsSlice.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":37,"column":5,"nodeType":"119","endLine":37,"endColumn":7,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":18,"column":23,"nodeType":"123","messageId":"124","endLine":18,"endColumn":32},{"ruleId":"117","severity":1,"message":"125","line":37,"column":6,"nodeType":"119","endLine":37,"endColumn":8,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":2,"column":35,"nodeType":"123","messageId":"124","endLine":2,"endColumn":56},{"ruleId":"117","severity":1,"message":"125","line":36,"column":6,"nodeType":"119","endLine":36,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":112,"column":120,"nodeType":"131","messageId":"132","endLine":112,"endColumn":121},{"ruleId":"121","severity":1,"message":"133","line":3,"column":22,"nodeType":"123","messageId":"124","endLine":3,"endColumn":47},{"ruleId":"121","severity":1,"message":"127","line":3,"column":81,"nodeType":"123","messageId":"124","endLine":3,"endColumn":102},{"ruleId":"121","severity":1,"message":"134","line":133,"column":18,"nodeType":"123","messageId":"124","endLine":133,"endColumn":35},{"ruleId":"121","severity":1,"message":"135","line":141,"column":9,"nodeType":"123","messageId":"124","endLine":141,"endColumn":12},{"ruleId":"117","severity":1,"message":"136","line":165,"column":5,"nodeType":"119","endLine":165,"endColumn":13,"suggestions":"137"},{"ruleId":"121","severity":1,"message":"138","line":12,"column":12,"nodeType":"123","messageId":"124","endLine":12,"endColumn":22},{"ruleId":"121","severity":1,"message":"139","line":12,"column":24,"nodeType":"123","messageId":"124","endLine":12,"endColumn":37},{"ruleId":"121","severity":1,"message":"140","line":13,"column":12,"nodeType":"123","messageId":"124","endLine":13,"endColumn":20},{"ruleId":"121","severity":1,"message":"141","line":13,"column":22,"nodeType":"123","messageId":"124","endLine":13,"endColumn":33},{"ruleId":"121","severity":1,"message":"142","line":14,"column":12,"nodeType":"123","messageId":"124","endLine":14,"endColumn":22},{"ruleId":"121","severity":1,"message":"143","line":14,"column":24,"nodeType":"123","messageId":"124","endLine":14,"endColumn":37},{"ruleId":"117","severity":1,"message":"144","line":18,"column":8,"nodeType":"119","endLine":18,"endColumn":14,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSVCPaamDetails'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'hasErrors' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchSVCDetailsById'. Either include it or remove the dependency array.",["149"],"'approveORrejectSucess' is defined but never used.",["150"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'approveOrRejectSVCRequest' is defined but never used.","'svcapproveDetails' is assigned a value but never used.","'set' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apicallForUserRequest', 'dispatch', 'rowValue', and 'values'. Either include them or remove the dependency array.",["151"],"'headerText' is assigned a value but never used.","'setheaderText' is assigned a value but never used.","'bodyText' is assigned a value but never used.","'setbodyText' is assigned a value but never used.","'savebutton' is assigned a value but never used.","'setsaveButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'message'. Either include it or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [fetchSVCPaamDetails]",{"range":"162","text":"163"},"Update the dependencies array to be: [fetchSVCDetailsById]",{"range":"164","text":"165"},{"range":"166","text":"165"},"Update the dependencies array to be: [apicallForUserRequest, dispatch, rowValue, update, values]",{"range":"167","text":"168"},"Update the dependencies array to be: [message, open]",{"range":"169","text":"170"},[1696,1698],"[fetchSVCPaamDetails]",[1280,1282],"[fetchSVCDetailsById]",[1323,1325],[4597,4605],"[apicallForUserRequest, dispatch, rowValue, update, values]",[677,683],"[message, open]"]